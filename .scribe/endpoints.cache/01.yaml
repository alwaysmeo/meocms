## Autogenerated by Scribe. DO NOT MODIFY.

name: '账号 - Account'
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/account/invalid
    metadata:
      groupName: '账号 - Account'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 令牌失效回调
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":null,"message":"Token\u5931\u6548\uff0c\u8bf7\u91cd\u65b0\u767b\u5f55","code":1000}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/account/login
    metadata:
      groupName: '账号 - Account'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 登录
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      account:
        name: account
        description: ''
        required: false
        example: alwaysmeorg@qq.com
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      password:
        name: password
        description: ''
        required: false
        example: '123456'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanBodyParameters:
      account: alwaysmeorg@qq.com
      password: '123456'
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"ulid":"01j465weqc1he6hmtj29xf9pkq","email":"alwaysmeorg@qq.com","token":"80|DZAORtyIla8peo8sK6mYIUR6MLOASmer4jN1LHTmf998e8e3","nickname":"\u7cfb\u7edf\u7ba1\u7406\u5458","picture":{"url":"https:\/\/picsum.photos\/100\/100","origin_name":"\u5934\u50cf","suffix":"jpeg"},"phone":18182354601,"status":1,"last_login_at":"2024-08-05 10:09:42","platform":"","created_at":"2024-08-01 05:16:27","updated_at":"2024-08-05 02:09:42","deleted_at":null},"message":"success","code":200}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/account/register
    metadata:
      groupName: '账号 - Account'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 注册
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      account:
        name: account
        description: validation.email.
        required: true
        example: walker.anita@example.net
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      password:
        name: password
        description: 'Must match the regex /^[a-zA-Z0-9]+$/. validation.between.'
        required: true
        example: 'XA@B]-'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      account: walker.anita@example.net
      password: 'XA@B]-'
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":null,"message":"validation.regex","code":5000}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/account/logout
    metadata:
      groupName: '账号 - Account'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 登出
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":null,"message":"success","code":200}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 121111111111111111'
    controller: null
    method: null
    route: null
    custom: []
