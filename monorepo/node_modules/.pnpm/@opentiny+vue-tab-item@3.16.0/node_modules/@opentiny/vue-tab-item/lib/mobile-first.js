function _extends() {
  _extends = Object.assign ? Object.assign.bind() : function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends.apply(this, arguments);
}
import { renderless } from "@opentiny/vue-renderless/tab-item-mf/vue";
import { defineComponent, $props, setup as _setup } from "@opentiny/vue-common";
var _sfc_main = defineComponent({
  props: _extends({}, $props, {
    title: String,
    name: String,
    selected: Boolean,
    renderTitle: Function,
    renderSetting: Function,
    lazy: Boolean
  }),
  setup: function setup(props, context) {
    return _setup({
      props,
      context,
      renderless,
      api: null
    });
  },
  render: function render() {
    return null;
  }
});
export {
  _sfc_main as default
};
