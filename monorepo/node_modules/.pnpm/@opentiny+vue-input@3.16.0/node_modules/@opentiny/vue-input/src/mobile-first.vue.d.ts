declare const _default: import("@vue/runtime-core").DefineComponent<Readonly<{
    name?: any;
    type?: any;
    form?: any;
    label?: any;
    size?: any;
    resize?: any;
    disabled?: any;
    tiny_mode?: any;
    tiny_mode_root?: any;
    tiny_template?: any;
    tiny_renderless?: any;
    _constants?: any;
    tiny_theme?: any;
    tiny_chart_theme?: any;
    height?: any;
    modelValue?: any;
    tabindex?: any;
    suffixIcon?: any;
    mask?: any;
    customClass?: any;
    readonly?: any;
    prefixIcon?: any;
    counter?: any;
    autosize?: any;
    clearable?: any;
    autocomplete?: any;
    showPassword?: any;
    showWordLimit?: any;
    validateEvent?: any;
    displayOnly?: any;
    displayOnlyContent?: any;
    showEmptyValue?: any;
}>, any, unknown, {}, {}, import("@vue/runtime-core").ComponentOptionsMixin, import("@vue/runtime-core").ComponentOptionsMixin, ("input" | "clear" | "blur" | "change" | "click" | "focus" | "keydown" | "keyup" | "mouseenter" | "mouseleave" | "paste" | "update:modelValue")[], "input" | "clear" | "blur" | "change" | "click" | "focus" | "keydown" | "keyup" | "mouseenter" | "mouseleave" | "paste" | "update:modelValue", import("@vue/runtime-core").PublicProps, Readonly<import("@vue/runtime-core").ExtractPropTypes<Readonly<{
    name?: any;
    type?: any;
    form?: any;
    label?: any;
    size?: any;
    resize?: any;
    disabled?: any;
    tiny_mode?: any;
    tiny_mode_root?: any;
    tiny_template?: any;
    tiny_renderless?: any;
    _constants?: any;
    tiny_theme?: any;
    tiny_chart_theme?: any;
    height?: any;
    modelValue?: any;
    tabindex?: any;
    suffixIcon?: any;
    mask?: any;
    customClass?: any;
    readonly?: any;
    prefixIcon?: any;
    counter?: any;
    autosize?: any;
    clearable?: any;
    autocomplete?: any;
    showPassword?: any;
    showWordLimit?: any;
    validateEvent?: any;
    displayOnly?: any;
    displayOnlyContent?: any;
    showEmptyValue?: any;
}>>> & {
    onInput?: ((...args: any[]) => any) | undefined;
    onBlur?: ((...args: any[]) => any) | undefined;
    onChange?: ((...args: any[]) => any) | undefined;
    onClick?: ((...args: any[]) => any) | undefined;
    onFocus?: ((...args: any[]) => any) | undefined;
    onKeydown?: ((...args: any[]) => any) | undefined;
    onKeyup?: ((...args: any[]) => any) | undefined;
    onMouseenter?: ((...args: any[]) => any) | undefined;
    onMouseleave?: ((...args: any[]) => any) | undefined;
    onPaste?: ((...args: any[]) => any) | undefined;
    "onUpdate:modelValue"?: ((...args: any[]) => any) | undefined;
    onClear?: ((...args: any[]) => any) | undefined;
}, {
    readonly name?: any;
    readonly type?: any;
    readonly form?: any;
    readonly label?: any;
    readonly size?: any;
    readonly resize?: any;
    readonly disabled?: any;
    readonly tiny_mode?: any;
    readonly tiny_mode_root?: any;
    readonly tiny_template?: any;
    readonly tiny_renderless?: any;
    readonly _constants?: any;
    readonly tiny_theme?: any;
    readonly tiny_chart_theme?: any;
    readonly height?: any;
    readonly modelValue?: any;
    readonly tabindex?: any;
    readonly suffixIcon?: any;
    readonly mask?: any;
    readonly customClass?: any;
    readonly readonly?: any;
    readonly prefixIcon?: any;
    readonly counter?: any;
    readonly autosize?: any;
    readonly clearable?: any;
    readonly autocomplete?: any;
    readonly showPassword?: any;
    readonly showWordLimit?: any;
    readonly validateEvent?: any;
    readonly displayOnly?: any;
    readonly displayOnlyContent?: any;
    readonly showEmptyValue?: any;
}, {}>;
export default _default;
