function _extends() {
  _extends = Object.assign ? Object.assign.bind() : function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends.apply(this, arguments);
}
import { defineComponent, $prefix, $props, $setup } from "@opentiny/vue-common";
import MobileTemplate from "./mobile.js";
var template = function template2(mode) {
  var _process$env;
  typeof process === "object" ? (_process$env = process.env) == null ? void 0 : _process$env.TINY_MODE : null;
  return MobileTemplate;
};
var MultiSelectItem = defineComponent({
  name: $prefix + "MultiSelectItem",
  inject: {},
  props: _extends({}, $props, {
    option: {
      type: Object,
      default: function _default() {
        return {
          label: ""
        };
      }
    },
    divided: {
      type: Boolean,
      default: false
    }
  }),
  setup: function setup(props, context) {
    return $setup({
      props,
      context,
      template
    });
  }
});
var version = "3.16.0";
MultiSelectItem.install = function(Vue) {
  Vue.component(MultiSelectItem.name, MultiSelectItem);
};
MultiSelectItem.version = version;
export {
  MultiSelectItem as default
};
